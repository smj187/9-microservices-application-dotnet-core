resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: hello_service

              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains:
                      - "*"
                    routes:
                      - match:
                          prefix: /z
                        direct_response:
                          status: 200
                          body:
                            inline_string: "its working"

                      - match:
                          prefix: /ca
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /catalog-service
                          cluster: catalogservice

                      - match:
                          prefix: /de
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /delivery-service
                          cluster: deliveryservice

                      - match:
                          prefix: /id
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /identity-service
                          cluster: identityservice

                      - match:
                          prefix: /me
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /media-service
                          cluster: mediaservice

                      - match:
                          prefix: /or
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /order-service
                          cluster: orderservice

                      - match:
                          prefix: /pa
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /payment-service
                          cluster: paymentservice

                      - match:
                          prefix: /te
                        route:
                          auto_host_rewrite: true
                          prefix_rewrite: /tenant-service
                          cluster: tenantservice

              http_filters:
                - name: envoy.filters.http.jwt_authn
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                    providers:
                      envoy-jwt-checker:
                        issuer: https://localhost:5000
                        audiences:
                          - TestAudience
                        remote_jwks:
                          http_uri:
                            uri: https://localhost:5000/jwks
                            cluster: identityservice
                            timeout: 1s
                          cache_duration:
                            seconds: 300
                        from_headers:
                          - name: Authorization
                            value_prefix: "Bearer "
                        forward: true
                        forward_payload_header: x-jwt-payload

                    rules:
                      - match:
                          safe_regex:
                            google_re2: {}
                            regex: ^/(ca|de|id|me|or|pa|te)\/api\/v\d+\/\w+\/(create|delete)
                        requires:
                          provider_and_audiences:
                            provider_name: envoy-jwt-checker
                            audiences: TestAudience

                - name: envoy.filters.http.local_ratelimit
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                    stat_prefix: http_local_rate_limiter
                    token_bucket:
                      max_tokens: 2
                      tokens_per_fill: 2
                      fill_interval: 5s
                    filter_enabled:
                      runtime_key: local_rate_limit_enabled
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
                    filter_enforced:
                      runtime_key: local_rate_limit_enforced
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
                    response_headers_to_add:
                      - append: false
                        header:
                          key: x-local-rate-limit
                          value: "true"
                    local_rate_limit_per_downstream_connection: false

                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            transport_socket:
              name: envoy.transport_sockets.tls
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                common_tls_context:
                  tls_certificates:
                    certificate_chain:
                      filename: /var/lib/envoy/https/cacert.pem
                    private_key:
                      filename: /var/lib/envoy/https/cakey.pem
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              tls_certificates:
                certificate_chain:
                  filename: /var/lib/envoy/https/cert.pem
                private_key:
                  filename: /var/lib/envoy/https/key.pem
              alpn_protocols: ["h2,http/1.1"]
              tls_params:
                tls_minimum_protocol_version: "TLSv1_2"

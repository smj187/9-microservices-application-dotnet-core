version: "3.8"

services:
  catalog_cache:
    image: redis/redis-stack
    container_name: catalog_cache
    ports:
      - 5103:6379
      - 5104:8001
#   catalog_database:
#     image: mongo
#     container_name: catalog_database
#     restart: unless-stopped
#     ports:
#       - 5102:27017
#     volumes:
#       - catalog-database:/data/db

#   catalog_service:
#     image: ${DOCKER_REGISTRY-}catalogservice
#     container_name: catalog_service
#     build:
#       context: .
#       dockerfile: Services/CatalogService/CatalogService.API/Dockerfile.Development
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ASPNETCORE_URLS=https://+:443;http://+:80
#       - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/CatalogService.pfx
#       - ASPNETCORE_Kestrel__Certificates__Default__Password=crypticpassword
#       - Cache__DefaultConnection=host.docker.internal
#       - Cache__DefaultPort=5103
#       - RabbitMq:Host=rabbitmq://host.docker.internal
#       - RabbitMq:Username=guest
#       - RabbitMq:Password=guest
#       - Tenants__0__Name=Tenant A
#       - Tenants__0__TenantId=tenant-a
#       - Tenants__0__ConnectionString=mongodb://host.docker.internal:5102/
#       - Tenants__1__Name=Tenant B
#       - Tenants__1__TenantId=tenant-b
#       - Tenants__1__ConnectionString=mongodb://host.docker.internal:5102/
#     ports:
#       - "5101:80"
#       - "5100:443"
#     volumes:
#       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
#       - ${USERPROFILE}\.aspnet\Https:/https/:ro
#     depends_on:
#       - catalog_database
#       - catalog_cache

# volumes:
#   catalog-database:
